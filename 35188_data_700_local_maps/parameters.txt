#### Data format and parameters ####


*** The following data files are needed in SLAM algorithms:

(1) store_speed.mat

The (measured) speed of robot at each time step. This is generated by adding noises to the true speed.

unit: m/s, the whole data set is a row vector.

(2) store_turnrate.mat

The (measured) turnrate of robot at each time step. This is generated by adding noises to the true turnrate.

unit: rad/s, the whole data set is a row vector.

(3) sensor_data.mat

The observation data.

Format: [time step i (observation made from the i-th robot pose), ID of observed beacon, range, bearing, 0, 0, 0]

The last three digit are currently not useful. 

*** The robot motion model and the following parameters are also needed in SLAM algorithms:

**The robot motion model:

x(k+1) = x(k) + speed(k)*TimeInterval*cos(turnrate(k)*TimeInterval+phi(k));
y(k+1) = y(k) + speed(k)*TimeInterval*sin(turnrate(k)*TimeInterval+phi(k));
phi(k+1) = phi(k) + turnrate(k)*TimeInterval; 

TimeInterval = 0.3 (s) -- time interval between two steps

**The noises added are all Gaussian noises and the variances are:

sigv = 0.02;   --- variance on speed noise
                 
sigomega = (2*pi/180); --- variance on turnrate noise

sigr = 0.1; unit: m -- variance on range observation

sigtheta = (1*pi/180); unit: rad -- variance on bearing observation


=================================

***The following data files are also provided. They are not needed in the SLAM algorithms 
but can be used for checking the SLAM results.

(1) store_beaconsTrue.mat

The true positions of all the beacons in the environment. Some of the beacons may not be observed by the robot.

Format (each row): beacon_ID, x_position, y_position

(2) store_speedTrue.mat

The true speed of robot at each time step. This data is not available for SLAM algorithm.

unit: m/s, the whole data set is a row vector.

(3) store_turnrateTrue.mat

The true turnrate of robot at each time step. This data is not available for SLAM algorithm.

unit: rad/s, the whole data set is a row vector.

(4) store_robotTrue.mat

The true robot poses at each time step. They are obtained from the vehicle model and the true speed and turnrate.

Format: each column -- x_position, y_position, orientation.


